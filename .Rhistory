mean(x);v <- sqrt(sum((x - mean(x))^2)/length(x));v
x = c(20,32,22,86,68,28)
mean(x);v <- sqrt(sum((x - mean(x))^2)/(length(x)-1));v
x = c(22,13,18,16)
mean(x);v <- sqrt(sum((x - mean(x))^2)/(length(x)-1));v
x = c(31,16,19,13,38,18)
mean(x);v <- sqrt(sum((x - mean(x))^2)/(length(x)));v
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
ans <- (x[1] - mean(x)) / sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mean(y)
ans=cor(x,y)*sd(y)/sd(x)
b1=cor(x,y)*sd(y)/sd(x)
b0=mean(y)=b1*mean(x)
b0=mean(y)-b1*mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
plot(x,w)
Year = c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002)
Inc = c(53807, 55217, 55209, 55415, 63100, 63206, 63761, 65766)
plot(Inc ~ Year)
lm(Inc~Year)
lm(I(Inc - mean(Inc) ~ Year))
lm(I(Inc - mean(Inc) ~ I(Year - mean(Year)))
)
cor(Inc, Year)
covar(Inc, Year)
?cor
cov(Inv, Year)
cov(Inc, Year)
plot(Inc ~ Year)
Inc = c(53807, 55217, 55209, 55415, 63100, 63206, 63761, 65766)
plot(Inc ~ Year, ylim=c(0,66000))
lml <- lm(Inc# ~ Year)
lml <- lm(Inc# ~ Year)
lml <- lm(Inc ~ Year)
lml
library(ggplot2)
g <- ggplot(aes(x = Year, y=Inc))
g <- ggplot(aes(x = as.numeric(Year), y=as.numeric(Inc)))
dd <- as.data.fram(Year = Year, Inc = Inc)
dd <- as.data.frame(Year = Year, Inc = Inc)
?as.data.frame
dd <- as.data.frame(Year, Inc)
dd <- data.frame(Year = Year, Inc = Inc)
dd
ggplot(dd, aes(x=Year, y=Inc))
g <- ggplot(dd, aes(x=Year, y=Inc))
g <- g + geom_point()
)
g <- ggplot(dd, aes(x=Year, y=Inc))
g <- g + geom_point()
g
lml
coef(lml)
g <- g + geom_abline(intercept = coef(lml)[1], slope=coef(lml)[2], colour="red")
g
coef(lml)
?predict
predict(lml, data.frame(Year = 2010))
library(UsingR)
data (diamonds)
data (diamond)
y <- diamond$price; x<- diamond$carat
n <- length(y)
fit <- lm(y ~ x)
fit
e <- reside(fit)
e <- resid(fit)
e
yhat <- predict(fit)
yhat
mean(e)
y-yhat
y
yhat
y-yhat
e
e- (y - yhat)
max(abs(e- (y - yhat)))
plot(x,y)
abline(fit, col="red")
fit
summary(fit)
summary(fit)$sigma
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
data(mtcars)
summary(mtcars)
mpg <- mtcars$mpg
wt <- mtcars$wt
fit <- lm(mpg ~ wt)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
?mtcars
newdata <- data.frame(wt = 3000)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
p1
p2
plot(mpg ~ wt)
newdata <- data.frame(wt = 3)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
p2
newdata <- data.frame(wt = 2)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
p1
newdata <- data.frame(wt = 2)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
p1
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef
sumCoef[1,1]
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
library(MASS)
data(shuttle)
# convert outcome to 0 = noauto, 1 = auto
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
fit1 <- glm(use ~ wind - 1, data = shuttle, family = "binomial")
summary(fit)
windhead <- fit1$coef[1]
windtail <- fit1$coef[2]
exp(windtail)/exp(windhead)
library(MASS)
data(shuttle)
# convert outcome to 0 = noauto, 1 = auto
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
# Question 2
# Consider the previous problem. Give the estimated odds ratio for autoloader
# use comparing head winds (numerator) to tail winds (denominator) adjusting for
# wind strength from the variable magn.
fit2 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
summary(fit)
windhead2 <- fit2$coef[1]
windtail2 <- fit2$coef[2]
exp(windtail2)/exp(windhead2)
library(MASS)
data(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
fit3 <- glm(1-auto ~ wind,  binomial, shuttle)
fit$coefficients
fit3$coefficients
data(InsectSprays)
fit <- glm(count ~ spray  - 1, family = "poisson", data = InsectSprays)
exp(fit$coef[1])/exp(fit$coef[2])
data(mtcars)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
# lin.mod <- lm(y ~ x)
# segmented.mod <- segmented(lin.mod, seg.Z = ~ x, psi = 0)
#
# summary(segmented.mod)
#
# plot(x, y)
# plot(segmented.mod, add = TRUE)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
lhs <- function(x) ifelse(x < 0,0-x,0) # basis function 1 (lhs = left hockey stick)
rhs <- function(x) ifelse(x > 0,x-0,0) # basis function 2 (rhs = right hockey stick)
gb <- lm(y ~ lhs(x) + rhs(x))
x <- seq(-5,5,by=1)
py <- gb$coef[1]+gb$coef[2]*lhs(x)+gb$coef[3]*rhs(x)
lines(x, py)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
lhs <- function(x) ifelse(x < 0,0-x,0) # basis function 1 (lhs = left hockey stick)
rhs <- function(x) ifelse(x > 0,x-0,0) # basis function 2 (rhs = right hockey stick)
gb <- lm(y ~ lhs(x) + rhs(x))
x <- seq(-5,5,by=1)
py <- gb$coef[1]+gb$coef[2]*lhs(x)+gb$coef[3]*rhs(x)
plot(x, py)
install.packages(c("data.table", "knitr", "minqa", "multcomp", "quantmod", "Rcmdr", "Rcpp", "RcppArmadillo", "rgl", "rmarkdown", "testthat"))
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regline, lwd=3, col="red")
abline(regrline, lwd=3, col="red")
summary(regrline)
fit <- lm(child ~ parent, data=galton)
fit$residuals
summary(fit$residuals)
summary(fit)
mean(fit$residuals)
play()
?cov
cot(fit$residuals, galton$parents)
cor(fit$residuals, galton$parents)
cor(fit$residuals, galton$parent#)
)
cov(fit$residuals, galton$parent)
nxt()
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
play()
varChild
nxt()
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(acvel ~ mag+disr, attenu)
efit <- lm(acvel ~ mag+dist, attenu)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gch_nor, gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, data=galton)
fit <- lm(child ~ parent, galton)
ssr <- sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- sum(deviance(fit$residuals^2))
sRes <- sum(deviance(fit$residuals^2))
fit$residuals
play()
deviance(fit)
fit$residuals^2
sum(fit$residuals^2)
deviance(fit)
nxt()
sRes <- deviance(fit)
rRes/sTot
sRes/sTot
1 - sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(fit)
?cor
cor(galton$child, galton.parent)
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
library(swipe)
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child, ~ 1, galton)
lm(child ~ 1, galton)
view(trees)
View(trees)
fit <- lm(Volume ~ Grith + Height + Constant - 1, tree)
fit <- lm(Volume ~ Grith + Height + Constant - 1, trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
tree2 <- eliminate("Grith", trees)
tree2 <- eliminate("Girth", trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., data=swiss)
summary(lm)
summary(all
)
lm(Fertility ~ Agriculture - 1, data=swiss)
summary(lm(Fertility ~ Agriculture, data=swiss))
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality + ec, swiss)
all - efit
all$coef - efit$coef
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays, 15)
a
A
sA
View(tree2)
summary(InsectSprays[,2])
sapply(InsectSprays, class)
fit <- lm(count ~ spray, data=InsectSprays)
summary(fit$coefficients)
summary(fit$)coef
summary(fit)$coef
summary(fit)$coefficient
summary(fit)$coefficient[,1]
est <- summary(fit)$coef[, 1]
mean(sA)
mean(Sb)
mean(sB)
nfit <- lm(count ~ spray -1)
nfit <- lm(count ~ spray -1, InsectSprays)
summary(nfit)
summary(nfit)$coef
relevel(InsectSprays$spray, "C")
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, spray2)
head(spray2)
head(InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3]) / 1.6011
fit
summary(fit)
swirl()
dim(hunger)
948
colnames(hunger)
names(hunger)
fit <- lm(Numeric ~ Year)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex = "Female"])
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex = "Female"])
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex = 'Female'])
lmF <- lm(Numeric$hunger[hunger$Sex = "Female"] ~ Year$hunger[hunger$Sex = "Female"])
lmF <- lm(Numeric$hunger[hunger$Sex == "Female"] ~ Year$hunger[hunger$Sex == "Female"])
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"])
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"] ~ hunger$Year[hunger$Sex == "Male"])
lmBoth <- lm(Numeric, Year + Sex, hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(Y ~ x, out2)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, data=out[-1, ])
fitno <- lm(y ~ x, data= data.frame(out[-1, ]))
fitno <- lm(out[-1, ]$y ~ out[-1, ]$x)
fitno <- lm(y ~ x, data= data.frame(out2[-1, ]))
plot(fitno, which=1)
coef(fit) - coef(fitno)
play()
summary(fit)$coef - summary(fitno)$coef
nxt()
View(dfbeta(fit))
play()
out2[1, "y"]
out2
nxt()
resno <- out2[1, "y" - predict(fitno, out2[1, ])]
resno <- out2[1, "y"] - predict(fitno, out2[1, ])]
resno <- out2[1, "y"] - predict(fitno, out2[1, ]
)
1 - resid(fit)[1]
1 - resid(fit)[1]/resno
View(hatvalues(fit))
sigma <- sqrt(deviance(fit)/df(residual))
sigma <- sqrt(deviance(fit)/10)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- sigma * sqrt(1-hatvalues(fit))
rstd <- resid(fit) / (sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigmal <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[] / (sigma1 * sqrt(1 - hatvalues(fit)[1]))
resid(fit)[1] / (sigma1 * sqrt(1 - hatvalues(fit)[1]))
hear(rstudent(fit))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
play()
dy
nxt()
sum(dy^2) / 2 * sigma ^2
sum(dy^2) / (2 * sigma ^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data=swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data=swiss)
vif(mdl2)
library(swirl)
swirl()
xlc <- simbias()
xlc <- simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data=swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data=swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3) / 43
n <- (deviance(fit1)-deviance(fit3)) / 2
n/d
pf(n/d, 2, 43, lower.tail = F)
pf(n/d, 2, 43, lower.tail = FALSE)
shpiro.test(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
library(swirl)
swirl()
var(rpois(1000, 50))
nxt()
tail(hits)
clasS(hits[,'date'])
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
which.max(hits[,'visits']
)
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
?glm
mdl2 <- glm(log(visits+1), family=offset)
mdl2 <- glm(log(visits+1), family="offset")
mdl2 <- glm(log(visits+1), offset)
mdl2 <-1
swirl()
?
)
mdl2 <- log(vitis+1)
mdl2 <- log(visit+1)
mdl2 <- log(visits+1)
offset=log(visits+1)
help()
help
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset =log(visits + 1))
summary(mdl2)
qpois(.95, mdl2$fitted.values[704])
setwd("E:/Data Science - John Hopkins University/07. Regression Models/Project/regmods-007")
mtcars
data(mtcars)
?mtcars
nrow(mtcars)
ncol(mtcars)
head(mtcars)
class(mpg)
class(mtcars$mpg)
class(mtcars$am)
mtcars$mpg[mtcars$am="automatic"]
mtcars$mpg[mtcars$am=="automatic"]
mtcars$mpg[mtcars$am=="automatic",]
mtcars$mpg[,mtcars$am=="automatic"]
mtcars$mpg[,mtcars$am=="0"]
mtcars$mpg
mtcars$mpg[mtcars$am=="0"]
mtcars$mpg[mtcars$am=="automatic"]
mtcars$mpg[mtcars$am=="0"]
mtcars$mpg[mtcars$am=="1"]
hist(mtcars$mpg[mtcars$am=="0"], breaks=10, main="mpg for automatic vehicles", xlab="mpg")
hist(mtcars$mpg[mtcars$am=="1"], breaks=10, main="mpg for manual vehicles", xlab="mpg")
hist(mtcars$mpg[mtcars$am=="1"], breaks=10, main="mpg for manual vehicles", xlab="mpg", xlim=c(10,40))
hist(mtcars$mpg[mtcars$am=="1"], breaks=10, main="mpg for manual vehicles", xlab="mpg", xlim=c(10,35))
hist(mtcars$mpg[mtcars$am=="1"], breaks=7, main="mpg for manual vehicles", xlab="mpg", xlim=c(10,35))
hist(mtcars$mpg[mtcars$am=="0"], breaks=10, main="mpg for automatic vehicles", xlab="mpg")
hist(mtcars$mpg[mtcars$am=="0"], breaks=4, main="mpg for automatic vehicles", xlab="mpg")
hist(mtcars$mpg[mtcars$am=="0"], breaks=8, main="mpg for automatic vehicles", xlab="mpg")
hist(mtcars$mpg[mtcars$am=="0"], breaks=8, main="mpg for automatic vehicles", xlab="mpg", xlim=c(10, 30))
hist(mtcars$mpg[mtcars$am=="0"], breaks=6, main="mpg for automatic vehicles", xlab="mpg", xlim=c(10, 30))
hist(mtcars$mpg[mtcars$am=="0"], breaks=12, main="mpg for automatic vehicles", xlab="mpg", xlim=c(10, 30))
hist(mtcars$mpg[mtcars$am=="1"], breaks=7, main="mpg for manual vehicles", xlab="mpg", xlim=c(10,35))
hist(mtcars$mpg[mtcars$am=="1"], breaks=12, main="mpg for manual vehicles", xlab="mpg", xlim=c(10,35))
mtcars$mpg[mtcars$am=="0"]
mtcars$mpg[mtcars$am=="automatic"]
class(mtcars$am)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <-c("Automatic", "Manual")
mtcars$mpg[mtcars$am=="automatic"]
class(mtcars$am)
mtc.automatic <- subset(mtcars, mtcars$am=="automatic"])
mtc.automatic <- subset(mtcars, am=="automatic"])
mtc.automatic <- subset(mtcars, am=="automatic")
mtc.automatic
mtcars
subset(mtcars, am=="automatic")
mtcars[mtcars$am=="automatic",]
mtcars$am=="automatic"
mtcars$am=="0"
mtcars$am=="Automatic"
par(mfrow=c(2,1))
hist(mtcars$mpg[mtcars$am=="Automatic"], breaks=12, main="mpg for automatic vehicles", xlab="mpg", xlim=c(10, 35))
hist(mtcars$mpg[mtcars$am=="Manual"], breaks=12, main="mpg for manual vehicles", xlab="mpg", xlim=c(10,35))
par(mfrow=c(1,1))
